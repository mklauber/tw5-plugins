{"title":"$:/plugins/mklauber/shuffle","description":"A Shuffle filter operator","author":"Matthew Lauber","version":"1.0.2","core-version":">=5.0.0","plugin-type":"plugin","list":"readme","source":"https://github.com/mklauber/tiddly-shuffle","dependents":"","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/mklauber/shuffle/readme\":{\"title\":\"$:/plugins/mklauber/shuffle/readme\",\"caption\":\"Shuffle Operator\",\"text\":\"|!purpose|Randomize the order of the input list|\\n|!input|a selection of titles|\\n|!parameter|a random string to be used to create consistent random ordering|\\n|!output|The input titles, rearranged in a random order|\\n\\nThis plugin implements a new filter operator called Shuffle.  This operator takes the input list and randomizes the order of the list.  If no parameter is provided, the list order is random every time.\\n\\n!!!Example:\\n```\\n<$list filter=\\\"1 2 3 4 5 +[shuffle[]]\\\">\\n\\n</$list>\\n```\\n\\n<$button popup=\\\"$:/state/shuffle/reveal1\\\">Run Demo</$button>\\n\\n<$reveal type=\\\"popup\\\" state=\\\"$:/state/shuffle/reveal1\\\">\\n<div class=\\\"tc-drop-down\\\">\\n<$list filter=\\\"1 2 3 4 5 +[shuffle[]]\\\">\\n\\n</$list>\\n</div>\\n</$reveal>\\n\\nCombining this operator with the first operator allows you to choose 1 or more titles randomly from a list.\\n\\n!!!Example:\\n```\\n<$list filter=\\\"1 2 3 4 5 +[shuffle[]first[2]]\\\">\\n\\n</$list>\\n```\\n\\n<$button popup=\\\"$:/state/shuffle/reveal2\\\">Run Demo</$button>\\n\\n<$reveal type=\\\"popup\\\" state=\\\"$:/state/shuffle/reveal2\\\">\\n<div class=\\\"tc-drop-down\\\">\\n<$list filter=\\\"1 2 3 4 5 +[shuffle[]first[2]]\\\">\\n\\n</$list>\\n</div>\\n</$reveal>\\n\\nIf a parameter is provided the list will be ordered identically every time it is rendered.  This can be useful in conjunction a button that updates a state tiddler.  Set the parameter of this operator to reference that state tiddler, and create a button that updates that tiddler, and now the ordering of the random operators only changes when the button is pressed.\\n\\n!!!Example:\\n```\\n<$button>\\n<$action-setfield $tiddler=\\\"$:/temp/shuffle/example\\\" $field=\\\"state\\\" $value=<<now \\\"0hh:0mm:0ss\\\">>/>\\nChange Order\\n</$button>\\n\\n<$list filter=\\\"1 2 3 4 5 +[shuffle{$:/temp/shuffle/example!!state}]\\\">\\n\\n</$list>\\n```\\n\\n<$button>\\n<$action-setfield $tiddler=\\\"$:/temp/shuffle/example\\\" $field=\\\"state\\\" $value=<<now \\\"0hh:0mm:0ss\\\">>/>\\nUpdate\\n</$button>\\n\\n<$list filter=\\\"1 2 3 4 5 +[shuffle{$:/temp/shuffle/example!!state}]\\\">\\n\\n</$list>\\n\"},\"$:/plugins/mklauber/shuffle/seedrandom.js\":{\"title\":\"$:/plugins/mklauber/shuffle/seedrandom.js\",\"created\":\"20180220123939614\",\"modified\":\"20180220125617309\",\"module-type\":\"library\",\"tags\":\"\",\"type\":\"application/javascript\",\"text\":\"!function(a,b){function c(c,j,k){var n=[];j=1==j?{entropy:!0}:j||{};var s=g(f(j.entropy?[c,i(a)]:null==c?h():c,3),n),t=new d(n),u=function(){for(var a=t.g(m),b=p,c=0;a<q;)a=(a+c)*l,b*=l,c=t.g(1);for(;a>=r;)a/=2,b/=2,c>>>=1;return(a+c)/b};return u.int32=function(){return 0|t.g(4)},u.quick=function(){return t.g(4)/4294967296},u.double=u,g(i(t.S),a),(j.pass||k||function(a,c,d,f){return f&&(f.S&&e(f,t),a.state=function(){return e(t,{})}),d?(b[o]=a,c):a})(u,s,\\\"global\\\"in j?j.global:this==b,j.state)}function d(a){var b,c=a.length,d=this,e=0,f=d.i=d.j=0,g=d.S=[];for(c||(a=[c++]);e<l;)g[e]=e++;for(e=0;e<l;e++)g[e]=g[f=s&f+a[e%c]+(b=g[e])],g[f]=b;(d.g=function(a){for(var b,c=0,e=d.i,f=d.j,g=d.S;a--;)b=g[e=s&e+1],c=c*l+g[s&(g[e]=g[f=s&f+b])+(g[f]=b)];return d.i=e,d.j=f,c})(l)}function e(a,b){return b.i=a.i,b.j=a.j,b.S=a.S.slice(),b}function f(a,b){var c,d=[],e=typeof a;if(b&&\\\"object\\\"==e)for(c in a)try{d.push(f(a[c],b-1))}catch(a){}return d.length?d:\\\"string\\\"==e?a:a+\\\"\\\\0\\\"}function g(a,b){for(var c,d=a+\\\"\\\",e=0;e<d.length;)b[s&e]=s&(c^=19*b[s&e])+d.charCodeAt(e++);return i(b)}function h(){try{var b;return j&&(b=j.randomBytes)?b=b(l):(b=new Uint8Array(l),(k.crypto||k.msCrypto).getRandomValues(b)),i(b)}catch(b){var c=k.navigator,d=c&&c.plugins;return[+new Date,k,d,k.screen,i(a)]}}function i(a){return String.fromCharCode.apply(0,a)}var j,k=this,l=256,m=6,n=52,o=\\\"random\\\",p=b.pow(l,m),q=b.pow(2,n),r=2*q,s=l-1;if(b[\\\"seed\\\"+o]=c,g(b.random(),a),\\\"object\\\"==typeof module&&module.exports){module.exports=c;try{j=require(\\\"crypto\\\")}catch(a){}}else\\\"function\\\"==typeof define&&define.amd&&define(function(){return c})}([],Math);\"},\"$:/plugins/mklauber/shuffle/shuffle.js\":{\"title\":\"$:/plugins/mklauber/shuffle/shuffle.js\",\"caption\":\"A filter Operator to randomize the order of the list passed to it.\",\"created\":\"20150811171933696\",\"modified\":\"20180220125039203\",\"module-type\":\"filteroperator\",\"type\":\"application/javascript\",\"text\":\"(function(){\\n\\n    \\\"use strict\\\";\\n\\n    var hash = function(str) {\\n      var hash = 0, i, chr, len;\\n      if (str.length === 0) return hash;\\n      for (i = 0, len = str.length; i < len; i++) {\\n        chr   = str.charCodeAt(i);\\n        hash  = ((hash << 5) - hash) + chr;\\n        hash |= 0; // Convert to 32bit integer\\n      }\\n      return hash;\\n    }\\n\\n    var shuffle = function(array, seed) {\\n      var currentIndex = array.length, temporaryValue, randomIndex ;\\n     Math.seedrandom(seed)\\n\\n      // While there remain elements to shuffle...\\n      while (0 !== currentIndex) {\\n\\n        // Pick a remaining element...\\n        randomIndex = Math.floor(Math.random() * currentIndex);\\n        currentIndex -= 1;\\n\\n        // And swap it with the current element.\\n        temporaryValue = array[currentIndex];\\n        array[currentIndex] = array[randomIndex];\\n        array[randomIndex] = temporaryValue;\\n      }\\n\\n      return array;\\n    }\\n\\n    var prepare_results = function (source) {\\n\\t    var results = [];\\n\\t    source(function(tiddler,title) {\\n\\t\\t    results.push(title);\\n\\t    });\\n\\t    return results;\\n    };\\n\\n    exports.shuffle = function(source, operator, options) {\\n       var results = prepare_results(source);\\n       if (operator['operand'] == \\\"\\\") {\\n           shuffle(results);\\n       } else {\\n           shuffle(results, hash(operator['operand']));\\n       }\\n       return results;\\n    }\\n})();\\n\"},\"$:/plugins/mklauber/shuffle/startup.js\":{\"title\":\"$:/plugins/mklauber/shuffle/startup.js\",\"created\":\"20180220133753576\",\"modified\":\"20180220133920300\",\"module-type\":\"startup\",\"tags\":\"\",\"type\":\"application/javascript\",\"text\":\"exports.name = \\\"shuffle\\\"\\nexports.before = [\\\"render\\\"]\\nexports.startup = function() {\\n  $tw.modules.execute('$:/plugins/mklauber/shuffle/seedrandom.js');\\n}\\n\"}}}"}